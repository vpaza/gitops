apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-database
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-database
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-db
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-discord
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-discord
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-discord
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-email
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-email
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-email
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-oauth
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-oauth
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-oauth
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-session
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-session
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-session
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-storage
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-storage
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-storage
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-vatusa
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-vatusa
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-vatusa
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-webhooks
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-webhooks
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-webhooks
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-auth-jwks
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-auth-jwks
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-auth-jwks
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-auth-vatsim
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-auth-vatsim
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-auth-vatsim
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-logging-s3
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-logging-s3
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-logging-s3
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-logging-s3
  namespace: logging
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-logging-s3
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-logging-s3
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: secret-ids
  namespace: zan
spec:
  refreshInterval: 6h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-store
  target:
    name: secret-ids
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: zan2-ids-oauth
